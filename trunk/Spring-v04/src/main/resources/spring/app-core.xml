<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/util
           http://www.springframework.org/schema/util/spring-util.xsd">
	<context:component-scan base-package="org.forten.sample" />
	<!-- 向spring中加载指定位置上的属性文件 -->
	<context:property-placeholder location="classpath*:/system/*.properties" />
	
	<!-- 声明DataSource的Bean，数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="url" value="${jdbc.url}" />
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<!-- 设置DB连接池的初始化打开的连接数量 -->
		<property name="initialSize" value="${jdbc.initialSize}" />
		<!-- 设置可以打开的最大连接数 -->
		<property name="maxActive" value="${jdbc.maxActive}" />
		<!-- 设置最大的闲置连接数 -->
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<!-- 设置最小的闲置连接数 -->
		<property name="minIdle" value="${jdbc.minIdle}" />
		<!-- 设置在用户释放连接多久后判定此连接成为闲置，以秒为单位 -->
		<property name="maxWait" value="${jdbc.maxWait}" />
	</bean>
	
	<!-- 声明Spring封装的Hibernate中的SessionFactory Bean -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties" ref="hibernateProperties" />
		<property name="packagesToScan" ref="packagesToScanList" />
	</bean>
	
	<!-- 声明Hibernate的事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- 通知Spring容器，我们使用annotation方式进行事务管理 -->
	<tx:annotation-driven />
	
	<!-- 定义从哪些包中扫描Hibernate的实体类 -->
	<util:list id="packagesToScanList">
		<value>org.forten.**.entity</value>
		<value>org.forten.**.pojo</value>
		<value>org.forten.**.model</value>
	</util:list>
	
	<!-- 定义Hibernate相关的一些属性 -->
	<util:properties id="hibernateProperties">
		<!-- <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
		<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop> -->
		<!-- <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop> -->
		<prop key="hibernate.dialect">${hibernate.dialect}</prop>
		<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
		<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
		<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
		<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
	</util:properties>
</beans>